<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="kr.or.ddit.mapper.BuyerMapper">
	<resultMap type="BuyerVO" id="buyerMap" autoMapping="true">
		<!-- 1:N 관계 바인딩에선, 1에 대해 중복을 제거할 수 있는 기준이 필요
		오토매핑을 할지라도 id 컬럼을 남겨놔야. --> 
		<id property="buyerId" column="BUYER_ID"/>		
		<association property="lprod" javaType="LprodVO" autoMapping="true"/>
		<collection property="prodList" javaType="list" ofType="ProdVO">
			<id property="prodId" column="PROD_ID"/> 
			<!-- 이 경우는 자식인 prod 쪽에서도 중복 컬럼을 방지하기 위해 id 값 넣어줘야 했음. 
			상황마다 달라! 여긴 부모자식 둘다 중복 피해야 null 안나오는 상황. -->
			<result property="prodName" column="PROD_NAME"/>
			<result property="prodCost" column="PROD_COST"/>
			<result property="prodPrice" column="PROD_PRICE"/>
		</collection>
	</resultMap>

	<select id="selectBuyer" resultMap="buyerMap">
		WITH BUYERVIEW AS (
			SELECT
				BUYER_ID
				, BUYER_NAME
				, LPROD_GU
				, BUYER_BANK
				, BUYER_BANKNO
				, BUYER_BANKNAME
				, BUYER_ZIP
				, BUYER_ADD1
				, BUYER_ADD2
				, BUYER_COMTEL
				, BUYER_FAX
				, BUYER_MAIL
				, BUYER_CHARGER
				, BUYER_TELEXT
				, LPROD_NAME
			FROM BUYER NATURAL JOIN LPROD
			WHERE BUYER_ID = #{buyerId}
		)
		SELECT
			BUYERVIEW.*
			, PROD_ID
			, PROD_NAME
			, PROD_COST
			, PROD_PRICE
		FROM BUYERVIEW LEFT OUTER JOIN PROD ON (BUYERVIEW.BUYER_ID = PROD.BUYER_ID)
	</select>
	
	<select id="selectBuyerList" resultMap="buyerMap">  <!-- has 관계가 있어서 resultMap 못쓴거 -->
		WITH BUYERVIEW AS (
			SELECT
				BUYER_ID
				, BUYER_NAME
				, LPROD_GU
				, BUYER_BANK
				, BUYER_ADD1
				, BUYER_COMTEL
				, BUYER_CHARGER
				, LPROD_NAME
			FROM BUYER NATURAL JOIN LPROD
		)
		SELECT
			BUYERVIEW.*
			, PROD_ID
			, PROD_NAME
			, PROD_COST
			, PROD_PRICE
		FROM BUYERVIEW LEFT OUTER JOIN PROD ON (BUYERVIEW.BUYER_ID = PROD.BUYER_ID)
	</select>
	
	<insert id="insertBuyer">
		<selectKey resultType="string" keyProperty="buyerId" order="BEFORE">
		<!-- 비어있는 pk를 먼저 생성. pk의 타입(buyerId니까 스트링). 이 쿼리문으로 생성된 pk를 
		해당 프로퍼티에 넣겠다. insert보다 먼저 실행하겠단 '순서' 설정. -->
			SELECT
			    #{lprodGu} ||  
			    LPAD(NVL(to_number(SUBSTR(MAX(BUYER_ID), LENGTH('P101')+1)), 0)+ 1, 2, '0')
			FROM BUYER
			WHERE LPROD_GU = #{lprodGu}
		</selectKey>
		INSERT INTO BUYER (
		    BUYER_ID,
		    BUYER_NAME,
		    LPROD_GU,
		    BUYER_BANK,
		    BUYER_BANKNO,
		    BUYER_BANKNAME,
		    BUYER_ZIP,
		    BUYER_ADD1,
		    BUYER_ADD2,
		    BUYER_COMTEL,
		    BUYER_FAX,
		    BUYER_MAIL,
		    BUYER_CHARGER,
		    BUYER_TELEXT
		) VALUES (
			#{buyerId},
			#{buyerName},
			#{lprodGu},
			#{buyerBank},
			#{buyerBankno},
			#{buyerBankname},
			#{buyerZip},
			#{buyerAdd1},
			#{buyerAdd2},
			#{buyerComtel},
			#{buyerFax},
			#{buyerMail},
			#{buyerCharger},
			#{buyerTelext}
		)
	</insert>
	
	<update id="updateBuyer">
		UPDATE BUYER
		SET
			BUYER_BANK = #{buyerBank}
			, BUYER_BANKNO = #{buyerBankno}
			, BUYER_BANKNAME = #{buyerBankname}
			, BUYER_ZIP = #{buyerZip}
			, BUYER_ADD1 = #{buyerAdd1}
			, BUYER_ADD2 = #{buyerAdd2}
			, BUYER_COMTEL = #{buyerComtel}
			, BUYER_FAX = #{buyerFax}
			, BUYER_MAIL = #{buyerMail}
			, BUYER_CHARGER = #{buyerCharger}
			, BUYER_TELEXT = #{buyerTelext}
		WHERE BUYER_ID = #{buyerId}
	</update>
</mapper>